/* Service Card and Discovery Option Styles */

/* =================================
   Discovery Options Grid & Cards
   ================================= */

.discovery-options {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: var(--space-xl);
  margin: var(--space-xl) 0;
  align-items: start;
}

.discovery-option {
  background: var(--color-surface);
  padding: var(--space-lg);
  border-radius: var(--radius-lg);
  border: 1px solid var(--color-border-light);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;
  height: 20rem;
}

/* Shimmer animation for buttons */
@keyframes tagShine {
  from {
    background-position: -200% center;
  }
  to {
    background-position: 200% center;
  }
}

/* Discovery section button styles with shimmer animation */
.discovery-option .btn-unified.btn-primary[data-contact-type] {
  margin-top: auto;
  width: 100%;
  position: relative;
  border: none;
  overflow: hidden;
  background: linear-gradient(
    to right, 
    var(--color-accent) 20%, 
    var(--color-accent) 35%, 
    rgba(115, 125, 247, 1) 42%, 
    rgba(156, 175, 255, 1) 50%, 
    rgba(115, 125, 247, 1) 58%, 
    var(--color-accent) 65%, 
    var(--color-accent) 100%
  );
  background-size: 200% auto;
  animation: tagShine 6s linear infinite;
  will-change: background-position;
}

.discovery-option .btn-unified.btn-primary .btn-inner {
  margin: 2px;
  padding: var(--space-md) var(--space-xl);
  background: var(--color-accent);
  border-radius: calc(var(--radius-lg) - 1px);
  width: calc(100% - 4px);
  height: calc(100% - 4px);
}

.discovery-option .btn-unified.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(99, 102, 241, 0.4);
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
  .discovery-option .btn-unified.btn-primary[data-contact-type] {
    animation: tagShine 3s ease-in-out infinite;
    margin: var(--space-md) 0;
  }

  .discovery-options {
    gap: var(--space-lg);
  }
}

.discovery-option h3 {
  margin-top: 0;
  margin-bottom: var(--space-md);
  color: var(--color-accent);
  font-size: var(--text-base);
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  line-height: 1.2;
  transition: all 0.3s ease;
}

.discovery-option:hover h3 {
  color: var(--color-accent);
  text-shadow: 0 0 12px rgba(99, 102, 241, 0.6);
}

.discovery-option:hover h3 i {
  filter: drop-shadow(0 0 8px rgba(99, 102, 241, 0.8));
}

.discovery-option p {
  margin-bottom: var(--space-lg);
  font-size: var(--text-base);
  align-self: start;
}

/* =================================
   Services Grid & Service Cards
   ================================= */

.services-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--space-lg);
  margin-top: var(--space-lg);
  align-items: start;
}

.service-card {
  background: var(--color-surface);
  padding: var(--space-xl);
  padding-bottom: calc(var(--space-xl) + 120px); /* Add space for visual element */
  border-radius: var(--radius-lg);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  border: 1px solid var(--color-border-light);
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  display: grid;
  grid-template-rows: 3.75rem 5rem 1fr;
  height: 25rem;
}

.service-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  border-color: var(--color-accent);
}

.service-card.expanded {
  transform: scale(1.01);
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);
  border-color: var(--color-accent);
  z-index: 10;
}

.service-card h3 {
  margin-top: 0;
  margin-bottom: var(--space-md);
  color: var(--color-accent);
  font-weight: 600;
  font-size: var(--text-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1.2;
}

.service-summary {
  transition: opacity 0.3s ease;
  align-self: start;
}

.service-details {
  display: none;
  opacity: 0;
  transition: opacity 0.3s ease;
  margin-top: var(--space-lg);
  padding-top: var(--space-lg);
  border-top: 1px solid var(--color-border-light);
}

.service-card.expanded .service-summary {
  opacity: 0.7;
}

.service-card.expanded .service-details {
  display: block;
  opacity: 1;
}

.service-details h4 {
  margin-top: 0;
  margin-bottom: var(--space-sm);
  color: var(--color-text);
  font-size: var(--text-lg);
}

.service-details ul {
  margin: var(--space-sm) 0;
  padding-left: var(--space-lg);
}

.service-details li {
  margin-bottom: var(--space-xs);
}

.service-card .click-hint {
  position: absolute;
  bottom: var(--space-sm);
  right: var(--space-sm);
  font-size: var(--text-xs);
  color: var(--color-text-muted);
  opacity: 0.6;
  transition: opacity 0.3s ease;
}

.service-card.expanded .click-hint {
  opacity: 0;
}

.service-card.expanded .service-visual {
  opacity: 1;
}

.service-card.expanded .service-visual.animate .arch-layer {
  animation: layerBuild 0.8s ease-out forwards;
}

/* Style service-visual elements for proper display */
.service-visual .arch-layer {
  background: rgba(99, 102, 241, 0.1);
  border: 1px solid rgba(99, 102, 241, 0.3);
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
}

/* Only force visibility when card is expanded and animated */
.service-card.expanded .service-visual .arch-layer {
  opacity: 1;
}

.service-visual .network-node,
.service-visual .milestone-marker,
.service-visual .hub-core,
.service-visual .agent-instance,
.service-visual .agent-vm,
.service-visual .vm-boundary,
.service-visual .agent-core,
.service-visual .dept-node,
.service-visual .central-hub,
.service-visual .hub-pulse,
.service-visual .isolation-indicator {
  opacity: 1 !important;
  display: block !important;
}

.service-card.expanded .service-visual.animate .milestone-marker {
  opacity: 1;
}

.service-card.expanded .service-visual.animate .network-node {
  opacity: 1;
}

/* =================================
   Shared Card Title Styles
   ================================= */

/* Centered card titles with hover glow */
.discovery-option h3,
.service-card h3 {
  text-align: center;
  transition: all 0.3s ease;
}

.discovery-option:hover h3,
.service-card:hover h3 {
  text-shadow: 0 0 2px rgba(102, 126, 234, 0.4);
  filter: brightness(1.15);
}

/* Icon styles for h3 elements - 25% bigger */
.service-card h3 i,
.discovery-option h3 i {
  width: 1.5em;
  height: 1.5em;
  margin-right: 0;
  margin-left: 0;
  vertical-align: middle;
  display: inline-block;
}

/* =================================
   Service Visual Elements
   ================================= */

/* Base Service Visual Container */
.service-visual {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 120px;
  background: linear-gradient(135deg, var(--color-graphite-750) 0%, var(--color-graphite-700) 100%);
  border-bottom-left-radius: var(--radius-lg);
  border-bottom-right-radius: var(--radius-lg);
  overflow: hidden;
  opacity: 0.8;
}

/* Removed universal gradient overlay to ensure consistency between service cards */

/* Production Pipeline Visualization */
.production-pipeline {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-sm);
  background: linear-gradient(135deg, rgba(14, 165, 233, 0.05) 0%, rgba(99, 102, 241, 0.05) 100%);
  overflow: hidden;
}

.pipeline-stage {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
  position: relative;
}

.stage-icon {
  font-size: 12px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(135deg, var(--color-accent), rgb(14, 165, 233));
  border-radius: 50%;
  color: white;
  font-weight: bold;
}

.stage-label {
  font-size: 8px;
  font-weight: 600;
  color: var(--color-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.stage-status {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--color-accent);
  animation: statusPulse 2s infinite;
}

.stage-status.success {
  background: rgb(34, 197, 94);
}

.pipeline-flow {
  flex: 1;
  height: 2px;
  background: rgba(99, 102, 241, 0.2);
  position: relative;
  margin: 0 8px;
}

.flow-segment {
  height: 100%;
  position: relative;
  overflow: hidden;
}

.code-commit, .build-artifact, .live-agent {
  position: absolute;
  width: 8px;
  height: 8px;
  background: var(--color-accent);
  border-radius: 50%;
  top: -3px;
  animation: pipelineFlow 3s infinite;
}

.flowing {
  opacity: 0;
}

.uptime-indicator {
  position: absolute;
  top: -20px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 7px;
  font-weight: 700;
  color: rgb(34, 197, 94);
  background: rgba(34, 197, 94, 0.1);
  padding: 2px 4px;
  border-radius: 4px;
  border: 1px solid rgba(34, 197, 94, 0.3);
}

.agent-swarm {
  position: absolute;
  bottom: 8px;
  right: 8px;
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.agent-instance {
  width: 6px;
  height: 6px;
  background: var(--color-accent);
  border-radius: 50%;
  animation: agentScale 2s infinite;
}

.scaling-indicator {
  font-size: 6px;
  color: var(--color-text-secondary);
  font-weight: 600;
  text-align: center;
}

/* =================================
   AI-First Architecture Visualization
   ================================= */

.ai-first-architecture {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-sm);
}

.architecture-stack {
  position: relative;
  width: 65%;
  height: 100%;
}

.arch-layer {
  position: absolute;
  left: 0;
  right: 0;
  border: 1px solid rgba(99, 102, 241, 0.3);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(99, 102, 241, 0.1);
  animation: layerBuild 0.8s ease-out forwards;
  opacity: 0;
  transform: translateY(20px);
}

.arch-layer.building {
  background: rgba(99, 102, 241, 0.2);
  border-color: rgba(99, 102, 241, 0.5);
}

.layer-label {
  font-size: 10px;
  font-weight: 600;
  color: var(--color-text);
  text-align: center;
}

.code-particles,
.flow-lines,
.neural-nodes,
.logic-circuits,
.autonomous-indicators {
  position: absolute;
  top: 2px;
  right: 4px;
  width: 6px;
  height: 6px;
  background: var(--color-accent);
  border-radius: 50%;
  animation: pulse 2s infinite;
}

.velocity-multiplier {
  position: relative;
  width: 30%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 8px;
}

.velocity-arrow {
  font-size: 24px;
  font-weight: bold;
  color: var(--color-accent);
  animation: arrowPulse 1.5s infinite;
}

.multiplier-text {
  font-size: 20px;
  font-weight: 700;
  color: var(--color-accent);
  text-shadow: 0 0 8px rgba(99, 102, 241, 0.6);
}

/* =================================
   Agent Orchestration Visualization
   ================================= */

.agent-orchestration {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.central-hub {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  align-items: center;
  justify-content: center;
}

.hub-core {
  background: var(--color-accent);
  color: white;
  padding: 8px 12px;
  border-radius: 50px;
  font-size: 10px;
  font-weight: 600;
  position: relative;
  z-index: 2;
}

.hub-pulse {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border: 2px solid var(--color-accent);
  border-radius: 50%;
  animation: hubPulse 2s infinite;
}

.isolated-agents {
  position: relative;
  width: 100%;
  height: 100%;
}

.agent-vm {
  position: absolute;
  width: 24px;
  height: 24px;
  animation: agentAppear 0.6s ease-out forwards;
  opacity: 0;
}

.vm-boundary {
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 1px solid rgba(99, 102, 241, 0.4);
  border-radius: 4px;
  background: rgba(99, 102, 241, 0.05);
}

.agent-core {
  position: relative;
  width: 100%;
  height: 100%;
  background: var(--color-accent);
  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 8px;
  font-weight: 600;
  z-index: 1;
}

.isolation-indicator {
  position: absolute;
  top: -4px;
  right: -4px;
  width: 6px;
  height: 6px;
  background: rgb(34, 197, 94);
  border-radius: 50%;
  animation: pulse 2s infinite;
}

.dept-node {
  position: absolute;
  padding: 2px 6px;
  background: rgba(99, 102, 241, 0.2);
  border: 1px solid rgba(99, 102, 241, 0.4);
  border-radius: 12px;
  font-size: 8px;
  font-weight: 600;
  color: var(--color-text);
  animation: nodeFloat 3s ease-in-out infinite;
}

.node-label {
  text-align: center;
}

.connection-beam {
  position: absolute;
  width: 2px;
  height: 20px;
  background: linear-gradient(to bottom, var(--color-accent), transparent);
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  animation: beamFlicker 2s infinite;
}

.integration-waves {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.wave {
  position: absolute;
  border: 1px solid rgba(99, 102, 241, 0.2);
  border-radius: 50%;
  animation: waveExpand 3s infinite;
}

.wave-1 {
  top: 40%;
  left: 40%;
  width: 20%;
  height: 20%;
  animation-delay: 0s;
}

.wave-2 {
  top: 35%;
  left: 35%;
  width: 30%;
  height: 30%;
  animation-delay: 1s;
}

.wave-3 {
  top: 30%;
  left: 30%;
  width: 40%;
  height: 40%;
  animation-delay: 2s;
}

/* =================================
   Productivity Training Visualization
   ================================= */

.productivity-training {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-sm);
}

.skill-progression {
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1;
}

.skill-level {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.skill-bar {
  width: 40px;
  height: 8px;
  background: rgba(99, 102, 241, 0.2);
  border-radius: 4px;
  position: relative;
  overflow: hidden;
}

.skill-level.basic .skill-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 30%;
  height: 100%;
  background: var(--color-accent);
  border-radius: 4px;
}

.skill-level.advanced .skill-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 90%;
  height: 100%;
  background: var(--color-accent);
  border-radius: 4px;
  animation: skillGrow 2s ease-out forwards;
}

.skill-label {
  font-size: 8px;
  font-weight: 600;
  color: var(--color-text-secondary);
  text-align: center;
}

.transformation-arrow {
  font-size: 16px;
  color: var(--color-accent);
  animation: arrowPulse 1.5s infinite;
}

.productivity-metrics {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

.metric-circle {
  position: relative;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.circle-progress {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: conic-gradient(var(--color-accent) var(--progress, 75%), rgba(99, 102, 241, 0.2) 0%);
  animation: circleRotate 3s ease-in-out infinite;
}

.metric-text {
  position: relative;
  text-align: center;
  font-size: 8px;
  font-weight: 700;
  color: var(--color-text);
  line-height: 1.2;
  z-index: 1;
}

.workflow-icons {
  display: flex;
  gap: 4px;
}

.workflow-icon {
  width: 12px;
  height: 12px;
  background: rgba(99, 102, 241, 0.3);
  border-radius: 2px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 8px;
  color: var(--color-accent);
  animation: iconPulse 2s infinite;
}

.workflow-icon:nth-child(2) {
  animation-delay: 0.5s;
}

.workflow-icon:nth-child(3) {
  animation-delay: 1s;
}

/* =================================
   Autonomous Network Visualization
   ================================= */

.autonomous-network {
  position: relative;
  width: 100%;
  height: 100%;
}

.network-node {
  position: absolute;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.network-node.central {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 20px;
}

.pulse-ring {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 30px;
  height: 30px;
  border: 2px solid var(--color-accent);
  border-radius: 50%;
  animation: ringPulse 2s infinite;
}

.node-core {
  background: var(--color-accent);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  position: relative;
  z-index: 1;
  animation: nodePulse 3s ease-in-out infinite;
}

.network-node.satellite .node-core {
  width: 12px;
  height: 12px;
}

.connection-line {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 2px;
  height: 30px;
  background: linear-gradient(to bottom, var(--color-accent), transparent);
  transform-origin: top center;
  animation: connectionFlicker 2s infinite;
}

.data-flow {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.flow-particle {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 4px;
  height: 4px;
  background: var(--color-accent);
  border-radius: 50%;
  animation: particleFlow 3s infinite;
}

/* =================================
   SVG Solar System Animation
   ================================= */

/* Solar system container - square aspect ratio for perfect SVG scaling */
.solar-system {
  width: 120px;
  height: 120px;
  margin: 0 auto;
  aspect-ratio: 1 / 1;
}

/* SVG fills the container completely */
.solar-system svg {
  width: 100%;
  height: 100%;
  color: var(--color-accent, #6366f1);
}

/* Orbit animation - each group rotates around SVG center (50,50) */
.orbit {
  transform-origin: 50px 50px;
  animation: orbit-spin var(--orbit-period) linear infinite;
}

/* Keyframe for smooth orbital rotation */
@keyframes orbit-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* =================================
   Learning Evolution Visualization
   ================================= */

.learning-evolution {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--space-sm);
}

.brain-container {
  position: relative;
  width: 40px;
  height: 30px;
  display: flex;
}

.brain-hemisphere {
  width: 50%;
  height: 100%;
  border: 1px solid rgba(99, 102, 241, 0.4);
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  padding: 2px;
}

.brain-hemisphere.left {
  border-radius: 12px 0 0 12px;
  border-right: none;
}

.brain-hemisphere.right {
  border-radius: 0 12px 12px 0;
  border-left: none;
}

.neural-pathway {
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, transparent, var(--color-accent), transparent);
  animation: neuralFire 2s infinite;
}

.neural-pathway:nth-child(2) {
  animation-delay: 0.5s;
}

.neural-pathway:nth-child(3) {
  animation-delay: 1s;
}

.learning-pulse {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 8px;
  height: 8px;
  background: var(--color-accent);
  border-radius: 50%;
  animation: learningPulse 1.5s infinite;
}

.data-absorption {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.data-point {
  position: absolute;
  width: 3px;
  height: 3px;
  background: rgba(99, 102, 241, 0.6);
  border-radius: 50%;
}

.data-point.incoming {
  animation: dataAbsorb 2s infinite;
  top: 20%;
  left: 10%;
}

.data-point:nth-child(2) {
  top: 40%;
  left: 15%;
}

.data-point:nth-child(3) {
  top: 60%;
  left: 20%;
}

.data-point:nth-child(4) {
  top: 80%;
  left: 25%;
}

.improvement-chart {
  display: flex;
  align-items: end;
  gap: 2px;
  height: 40px;
  width: 40px;
}

.chart-bar {
  background: var(--color-accent);
  width: 6px;
  border-radius: 1px 1px 0 0;
  animation: barGrow 1s ease-out forwards;
  transform: scaleY(0);
  transform-origin: bottom;
}

/* =================================
   Strategic Roadmap Visualization
   ================================= */

.strategic-roadmap {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0 var(--space-sm);
}

.roadmap-timeline {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 30px;
  margin-bottom: 20px;
}

.milestone-marker {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.milestone-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: rgba(99, 102, 241, 0.3);
  position: relative;
  z-index: 2;
}

.milestone-marker.completed .milestone-dot {
  background: var(--color-accent);
}

.milestone-marker.active .milestone-dot {
  background: var(--color-accent);
  box-shadow: 0 0 8px rgba(99, 102, 241, 0.6);
}

.milestone-dot.pulsing {
  animation: milestonePulse 2s infinite;
}

.milestone-label {
  font-size: 7px;
  font-weight: 600;
  color: var(--color-text-secondary);
  text-align: center;
}

.progress-line-bg {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 2px;
  background: rgba(99, 102, 241, 0.2);
  transform: translateY(-50%);
  z-index: 1;
}

.progress-line-fill {
  position: absolute;
  top: 50%;
  left: 0;
  width: 60%;
  height: 2px;
  background: var(--color-accent);
  transform: translateY(-50%);
  z-index: 1;
  animation: progressFill 2s ease-out forwards;
}

.impact-visualization {
  position: relative;
  height: 40px;
}

.roi-curve {
  position: relative;
  width: 100%;
  height: 100%;
}

.curve-point {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(99, 102, 241, 0.4);
  border-radius: 50%;
  transform: translate(-50%, 50%);
}

.curve-point.active {
  background: var(--color-accent);
  box-shadow: 0 0 6px rgba(99, 102, 241, 0.8);
  animation: curvePointPulse 2s infinite;
}

.roi-line {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, 
    transparent 0%, 
    rgba(99, 102, 241, 0.1) 20%,
    rgba(99, 102, 241, 0.2) 40%,
    rgba(99, 102, 241, 0.3) 60%,
    var(--color-accent) 80%,
    var(--color-accent) 100%
  );
  border-radius: 2px;
  opacity: 0.6;
}

/* =================================
   Service Visual Animations
   ================================= */

@keyframes layerBuild {
  0% { opacity: 0; transform: translateY(20px); }
  100% { opacity: 1; transform: translateY(0); }
}

@keyframes pulse {
  0%, 100% { opacity: 0.7; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.3); }
}

@keyframes arrowPulse {
  0%, 100% { opacity: 0.7; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.1); }
}

@keyframes hubPulse {
  0% { opacity: 0.3; transform: translate(-50%, -50%) scale(1); }
  50% { opacity: 0.1; transform: translate(-50%, -50%) scale(1.5); }
  100% { opacity: 0.3; transform: translate(-50%, -50%) scale(1); }
}

@keyframes agentAppear {
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes nodeFloat {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-3px); }
}

@keyframes beamFlicker {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

@keyframes waveExpand {
  0% { opacity: 0.6; transform: scale(0.8); }
  100% { opacity: 0; transform: scale(1.5); }
}

@keyframes skillGrow {
  0% { width: 30%; }
  100% { width: 90%; }
}

@keyframes circleRotate {
  0%, 100% { transform: rotate(0deg); }
  50% { transform: rotate(180deg); }
}

@keyframes iconPulse {
  0%, 100% { opacity: 0.6; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.1); }
}

@keyframes ringPulse {
  0% { opacity: 0.8; transform: translate(-50%, -50%) scale(1); }
  100% { opacity: 0; transform: translate(-50%, -50%) scale(2); }
}

@keyframes nodePulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

@keyframes connectionFlicker {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

@keyframes particleFlow {
  0% { transform: translateX(0) translateY(0); opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { transform: translateX(30px) translateY(-40px); opacity: 0; }
}

@keyframes neuralFire {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 1; }
}

@keyframes learningPulse {
  0%, 100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  50% { opacity: 0.5; transform: translate(-50%, -50%) scale(1.5); }
}

@keyframes dataAbsorb {
  0% { opacity: 0; transform: translateX(-20px); }
  50% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(20px); }
}

@keyframes barGrow {
  0% { transform: scaleY(0); }
  100% { transform: scaleY(1); }
}

@keyframes milestonePulse {
  0%, 100% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.7; transform: scale(1.2); }
}

@keyframes progressFill {
  0% { width: 0%; }
  100% { width: 60%; }
}

@keyframes curvePointPulse {
  0%, 100% { opacity: 1; transform: translate(-50%, 50%) scale(1); }
  50% { opacity: 0.6; transform: translate(-50%, 50%) scale(1.3); }
}

@keyframes statusPulse {
  0%, 100% { opacity: 0.7; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.3); }
}

@keyframes pipelineFlow {
  0% { left: -8px; opacity: 0; }
  10% { opacity: 1; }
  90% { opacity: 1; }
  100% { left: calc(100% + 8px); opacity: 0; }
}

@keyframes agentScale {
  0%, 100% { transform: scale(1); opacity: 0.7; }
  50% { transform: scale(1.2); opacity: 1; }
}

/* =================================
   Minimal Service Visuals
   ================================= */

.service-visual-minimal {
  background: linear-gradient(135deg, var(--color-graphite-750) 0%, var(--color-graphite-700) 100%);
  border: 1px solid var(--color-graphite-600);
}

.minimal-visual-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: var(--color-mist-200);
  width: 100%;
  padding: 0 var(--space-md);
}

.visual-icon {
  font-size: 2rem;
  margin-bottom: var(--space-xs);
  display: block;
}

.visual-text {
  font-size: 1rem;
  font-weight: 600;
  color: var(--color-mist-100);
  margin-bottom: var(--space-2xs);
  line-height: 1.2;
}

.visual-subtext {
  font-size: 0.875rem;
  color: var(--color-mist-400);
  opacity: 0.8;
  line-height: 1.2;
}

/* =================================
   Responsive Design
   ================================= */

@media (max-width: 1024px) and (min-width: 769px) {
  .services-grid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }
}

@media (max-width: 768px) {
  .discovery-options {
    grid-template-columns: 1fr;
  }
  
  .services-grid {
    grid-template-columns: 1fr;
  }
}

/* =================================
   Modal Custom Visualization Styles
   ================================= */

.modal-custom-visualization {
  width: 100%;
  height: 300px;
  background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
  border-radius: 12px;
  padding: 20px;
  margin-bottom: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.modal-custom-visualization .production-pipeline {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
}

.modal-custom-visualization .pipeline-stage {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 15px 10px;
  transition: all 0.3s ease;
  position: relative;
}

.modal-custom-visualization .stage-icon {
  font-size: 2.5rem;
  margin-bottom: 8px;
  filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.4));
}

.modal-custom-visualization .stage-label {
  font-size: 1rem;
  font-weight: 700;
  color: #ffffff;
  text-align: center;
  text-shadow: 0 0 8px rgba(255, 255, 255, 0.3);
}

.modal-custom-visualization .uptime-indicator {
  position: absolute;
  top: 20px;
  right: 25px;
  background: rgba(34, 197, 94, 0.2);
  border: 1px solid #22c55e;
  border-radius: 8px;
  padding: 6px 12px;
  font-size: 0.9rem;
  color: #22c55e;
  font-weight: 700;
  box-shadow: 0 0 8px rgba(34, 197, 94, 0.3);
}

.modal-custom-visualization .agent-swarm {
  position: absolute;
  bottom: 20px;
  right: 25px;
  display: flex;
  align-items: center;
  gap: 10px;
}

.modal-custom-visualization .scaling-indicator {
  font-size: 0.9rem;
  color: #3b82f6;
  font-weight: 700;
  background: rgba(59, 130, 246, 0.15);
  border: 1px solid rgba(59, 130, 246, 0.4);
  border-radius: 6px;
  padding: 4px 8px;
  box-shadow: 0 0 6px rgba(59, 130, 246, 0.3);
}

.modal-custom-visualization .agent-instance {
  width: 10px;
  height: 10px;
  background: #3b82f6;
  border-radius: 50%;
  animation: agentScale 2s infinite;
  box-shadow: 0 0 4px rgba(59, 130, 246, 0.5);
}

/* =================================
   Solar System Visualization for Startup Service Card
   ================================= */

.service-visual.solar {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  width: 100%;
  height: 100%;
}

.service-visual.solar .star {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 12px;
  height: 12px;
  background: var(--color-accent);
  border-radius: 50%;
  z-index: 5;
  box-shadow: 0 0 8px rgba(99, 102, 241, 0.6);
  animation: starPulse 8s ease-in-out infinite;
}

.service-visual.solar b {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* border: 1px solid var(--color-accent); */
  border-radius: 50%;
  opacity: 0.1;
  animation: orbitSpin 8s linear infinite;
}

.service-visual.solar b:nth-child(2) {
  width: 30px;
  height: 30px;
  animation-duration: 6s;
}

.service-visual.solar b:nth-child(3) {
  width: 50px;
  height: 50px;
  animation-duration: 12s;
}

.service-visual.solar b:nth-child(4) {
  width: 70px;
  height: 70px;
  animation-duration: 18s;
}

.service-visual.solar b:nth-child(5) {
  width: 90px;
  height: 90px;
  animation-duration: 24s;
}

@keyframes starPulse {
  0%, 100% { 
    opacity: 1; 
    transform: translate(-50%, -50%) scale(1); 
  }
  50% { 
    opacity: 0.7; 
    transform: translate(-50%, -50%) scale(1.1); 
  }
}

@keyframes orbitSpin {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Enhanced modal image container to accommodate custom visualization */
.modal-image-container {
  position: relative;
  width: 100%;
  min-height: 300px;
  display: flex;
  flex-direction: column;
}